@each $breakpointname, $breakpointsize in $grid-breakpoints {
  @media (min-width: #{$breakpointsize}) {
    body {
      --current-breakpoint: #{$breakpointname};
      --current-containerwidth: #{map-get($container-max-widths, $breakpointname)};
    }
  }
}

// @each $breakpointname, $containerwidth in $container-max-widths{
//   @include media-breakpoint-up($breakpointname){
//     body{
//       --current-containerwidth: #{$containerwidth};
//     }
//   }
// }

@each $name, $color in ($theme-colors) {
  .bg-#{$name} {
    color: #{color-contrast($color)};
    // color: white;

    *:not(.btn) {
      color: inherit !important;
    }
  }
}

@each $name, $color in ($theme-colors) {
  .text-#{$name} {
    *:not(.btn) {
      color: inherit !important;
    }
  }
}
.container__extend {
  width: calc(100% + ((100vw - (var(--current-containerwidth) - #{$grid-gutter-width} * 2)) / 2));
  overflow: hidden;
}
